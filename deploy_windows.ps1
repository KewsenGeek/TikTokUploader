# Instagram Uploader - Windows Deployment Script
# –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –Ω–∞ Windows —Å–µ—Ä–≤–µ—Ä–µ

param(
    [string]$DolphinToken = "",
    [string]$RuCaptchaKey = "",
    [string]$ServerIP = "localhost",
    [switch]$SkipDolphinCheck,
    [switch]$Production
)

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
$Green = "Green"
$Red = "Red"
$Yellow = "Yellow"
$Cyan = "Cyan"

function Write-Status {
    param([string]$Message, [string]$Color = $Green)
    Write-Host "‚úÖ $Message" -ForegroundColor $Color
}

function Write-Warning {
    param([string]$Message)
    Write-Host "‚ö†Ô∏è  $Message" -ForegroundColor $Yellow
}

function Write-Error {
    param([string]$Message)
    Write-Host "‚ùå $Message" -ForegroundColor $Red
}

function Write-Info {
    param([string]$Message)
    Write-Host "‚ÑπÔ∏è  $Message" -ForegroundColor $Cyan
}

Write-Host @"

üöÄ Instagram Mass Uploader - Windows Deployment
===============================================

–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø–æ–º–æ–∂–µ—Ç —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—å —Å–∏—Å—Ç–µ–º—É –Ω–∞ Windows —Å–µ—Ä–≤–µ—Ä–µ.

"@ -ForegroundColor $Cyan

# 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π
Write-Info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π..."

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Windows –≤–µ—Ä—Å–∏–∏
$windowsVersion = (Get-WmiObject -Class Win32_OperatingSystem).Caption
Write-Info "–í–µ—Ä—Å–∏—è Windows: $windowsVersion"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ PowerShell –≤–µ—Ä—Å–∏–∏
$psVersion = $PSVersionTable.PSVersion
if ($psVersion.Major -lt 5) {
    Write-Error "–¢—Ä–µ–±—É–µ—Ç—Å—è PowerShell 5.1 –∏–ª–∏ –≤—ã—à–µ. –¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è: $psVersion"
    exit 1
}
Write-Status "PowerShell –≤–µ—Ä—Å–∏—è: $psVersion"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker
Write-Info "–ü—Ä–æ–≤–µ—Ä–∫–∞ Docker..."
try {
    $dockerVersion = docker --version
    Write-Status "Docker –Ω–∞–π–¥–µ–Ω: $dockerVersion"
} catch {
    Write-Error "Docker –Ω–µ –Ω–∞–π–¥–µ–Ω! –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Desktop for Windows"
    Write-Info "–°–∫–∞—á–∞–π—Ç–µ —Å: https://docs.docker.com/desktop/install/windows-install/"
    exit 1
}

try {
    $composeVersion = docker-compose --version
    Write-Status "Docker Compose –Ω–∞–π–¥–µ–Ω: $composeVersion"
} catch {
    Write-Error "Docker Compose –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Dolphin Anty (–µ—Å–ª–∏ –Ω–µ –ø—Ä–æ–ø—É—â–µ–Ω–∞)
if (-not $SkipDolphinCheck) {
    Write-Info "–ü—Ä–æ–≤–µ—Ä–∫–∞ Dolphin Anty..."
    
    # Try localhost first (for host), then host.docker.internal (for Docker)
    $dolphinHosts = @(
        "http://localhost:3001/v1.0/browser_profiles",
        "http://host.docker.internal:3001/v1.0/browser_profiles"
    )
    
    $dolphinAvailable = $false
    foreach ($url in $dolphinHosts) {
        try {
            $response = Invoke-WebRequest -Uri $url -TimeoutSec 5 -ErrorAction Stop
            Write-Status "Dolphin Anty API –¥–æ—Å—Ç—É–ø–µ–Ω: $url"
            $dolphinAvailable = $true
            break
        } catch {
            # Continue to next URL
        }
    }
    
    if (-not $dolphinAvailable) {
        Write-Warning "Dolphin Anty API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –ø–æ—Ä—Ç–∞—Ö"
        Write-Info "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ Dolphin Anty –∑–∞–ø—É—â–µ–Ω –∏ Local API –≤–∫–ª—é—á–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 3001"
        Write-Info "–î–ª—è Docker —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è —É–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è DOLPHIN_API_HOST —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –≤ http://host.docker.internal:3001"
        
        $continue = Read-Host "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –±–µ–∑ Dolphin Anty? (y/N)"
        if ($continue -ne "y" -and $continue -ne "Y") {
            exit 1
        }
    }
}

# 2. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
Write-Info "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è..."

if (-not (Test-Path ".env")) {
    if (Test-Path "windows_deployment.env.example") {
        Copy-Item "windows_deployment.env.example" ".env"
        Write-Status "–°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª .env –∏–∑ –ø—Ä–∏–º–µ—Ä–∞"
    } else {
        Write-Warning "–§–∞–π–ª windows_deployment.env.example –Ω–µ –Ω–∞–π–¥–µ–Ω"
        Write-Info "–°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑–æ–≤–æ–≥–æ .env —Ñ–∞–π–ª–∞..."
        
        $envContent = @"
SECRET_KEY=$(New-Guid)
DEBUG=False
ALLOWED_HOSTS=localhost,127.0.0.1,$ServerIP
DOLPHIN_API_TOKEN=$DolphinToken
RUCAPTCHA_API_KEY=$RuCaptchaKey
TZ=Europe/Moscow
MAX_CONCURRENT_TASKS=2
"@
        Set-Content -Path ".env" -Value $envContent
        Write-Status "–°–æ–∑–¥–∞–Ω –±–∞–∑–æ–≤—ã–π .env —Ñ–∞–π–ª"
    }
} else {
    Write-Status "–§–∞–π–ª .env —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
}

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ .env —Ñ–∞–π–ª–∞ —Å –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
if ($DolphinToken) {
    (Get-Content ".env") -replace "DOLPHIN_API_TOKEN=.*", "DOLPHIN_API_TOKEN=$DolphinToken" | Set-Content ".env"
    Write-Status "–û–±–Ω–æ–≤–ª–µ–Ω DOLPHIN_API_TOKEN"
}

if ($RuCaptchaKey) {
    (Get-Content ".env") -replace "RUCAPTCHA_API_KEY=.*", "RUCAPTCHA_API_KEY=$RuCaptchaKey" | Set-Content ".env"
    Write-Status "–û–±–Ω–æ–≤–ª–µ–Ω RUCAPTCHA_API_KEY"
}

if ($ServerIP -ne "localhost") {
    $currentHosts = (Get-Content ".env" | Select-String "ALLOWED_HOSTS=").ToString()
    if ($currentHosts -notlike "*$ServerIP*") {
        (Get-Content ".env") -replace "ALLOWED_HOSTS=(.*)", "ALLOWED_HOSTS=`$1,$ServerIP" | Set-Content ".env"
        Write-Status "–î–æ–±–∞–≤–ª–µ–Ω IP —Å–µ—Ä–≤–µ—Ä–∞ –≤ ALLOWED_HOSTS"
    }
}

# 3. –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
Write-Info "–°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..."

$directories = @("logs", "temp", "media", "staticfiles", "prepared_videos")
foreach ($dir in $directories) {
    if (-not (Test-Path $dir)) {
        New-Item -ItemType Directory -Path $dir -Force | Out-Null
        Write-Status "–°–æ–∑–¥–∞–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $dir"
    }
}

# 4. –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–∞
Write-Info "–°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–∞..."

$composeFile = if ($Production) { "docker-compose.windows.yml" } else { "docker-compose.yml" }

if (-not (Test-Path $composeFile)) {
    Write-Error "–§–∞–π–ª $composeFile –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    exit 1
}

try {
    Write-Info "–°–æ–±–∏—Ä–∞–µ–º –æ–±—Ä–∞–∑... (—ç—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç)"
    docker-compose -f $composeFile build
    Write-Status "Docker –æ–±—Ä–∞–∑ —Å–æ–±—Ä–∞–Ω —É—Å–ø–µ—à–Ω–æ"
} catch {
    Write-Error "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±–æ—Ä–∫–µ Docker –æ–±—Ä–∞–∑–∞: $_"
    exit 1
}

# 5. –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
Write-Info "–ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."

try {
    docker-compose -f $composeFile up -d
    Write-Status "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑–∞–ø—É—â–µ–Ω"
} catch {
    Write-Error "–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞: $_"
    exit 1
}

# 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
Write-Info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."

Start-Sleep -Seconds 10

try {
    $status = docker-compose -f $composeFile ps
    Write-Status "–°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
    Write-Host $status
} catch {
    Write-Warning "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
}

# 7. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
Write-Info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞..."

$maxAttempts = 30
$attempt = 0
$webAvailable = $false

while ($attempt -lt $maxAttempts -and -not $webAvailable) {
    try {
        $response = Invoke-WebRequest -Uri "http://localhost:8000" -TimeoutSec 5 -ErrorAction Stop
        if ($response.StatusCode -eq 200) {
            $webAvailable = $true
            Write-Status "–í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ http://localhost:8000"
        }
    } catch {
        $attempt++
        if ($attempt -lt $maxAttempts) {
            Write-Host "." -NoNewline
            Start-Sleep -Seconds 2
        }
    }
}

if (-not $webAvailable) {
    Write-Warning "–í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ—Å–ª–µ $maxAttempts –ø–æ–ø—ã—Ç–æ–∫"
    Write-Info "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: docker-compose -f $composeFile logs"
} else {
    Write-Host ""
}

# 8. –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–æ–≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
Write-Info "–°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–æ–≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è..."

# –°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞
$startScript = @"
@echo off
echo Starting Instagram Uploader...
cd /d "%~dp0"
docker-compose -f $composeFile up -d
echo Instagram Uploader started successfully!
echo Open http://localhost:8000 in your browser
pause
"@
Set-Content -Path "start.bat" -Value $startScript
Write-Status "–°–æ–∑–¥–∞–Ω —Å–∫—Ä–∏–ø—Ç start.bat"

# –°–∫—Ä–∏–ø—Ç –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
$stopScript = @"
@echo off
echo Stopping Instagram Uploader...
cd /d "%~dp0"
docker-compose -f $composeFile down
echo Instagram Uploader stopped successfully!
pause
"@
Set-Content -Path "stop.bat" -Value $stopScript
Write-Status "–°–æ–∑–¥–∞–Ω —Å–∫—Ä–∏–ø—Ç stop.bat"

# –°–∫—Ä–∏–ø—Ç –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤
$logsScript = @"
@echo off
echo Instagram Uploader Logs...
cd /d "%~dp0"
docker-compose -f $composeFile logs -f
"@
Set-Content -Path "logs.bat" -Value $logsScript
Write-Status "–°–æ–∑–¥–∞–Ω —Å–∫—Ä–∏–ø—Ç logs.bat"

# 9. –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞
Write-Info "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞..."

$taskName = "Instagram_Uploader_AutoStart"
$currentPath = Get-Location
$startBatPath = Join-Path $currentPath "start.bat"

try {
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –∑–∞–¥–∞—á–∞
    $existingTask = Get-ScheduledTask -TaskName $taskName -ErrorAction SilentlyContinue
    
    if ($existingTask) {
        Write-Warning "–ó–∞–¥–∞—á–∞ '$taskName' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    } else {
        $action = New-ScheduledTaskAction -Execute $startBatPath
        $trigger = New-ScheduledTaskTrigger -AtStartup
        $settings = New-ScheduledTaskSettingsSet -AllowStartIfOnBatteries -DontStopIfGoingOnBatteries
        
        Register-ScheduledTask -TaskName $taskName -Action $action -Trigger $trigger -Settings $settings -Description "Auto-start Instagram Uploader on Windows boot" -ErrorAction Stop
        Write-Status "–°–æ–∑–¥–∞–Ω–∞ –∑–∞–¥–∞—á–∞ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞ –≤ Task Scheduler"
    }
} catch {
    Write-Warning "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞—á—É –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞: $_"
    Write-Info "–í—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å start.bat –≤ –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫—É Windows –≤—Ä—É—á–Ω—É—é"
}

# 10. –§–∏–Ω–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
Write-Host @"

üéâ –†–ê–ó–í–ï–†–¢–´–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!
============================

‚úÖ Instagram Uploader –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ
üåê –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: http://localhost:8000
üìÅ –§–∞–π–ª—ã –ø—Ä–æ–µ–∫—Ç–∞: $currentPath

üìã –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:

1. –û—Ç–∫—Ä–æ–π—Ç–µ http://localhost:8000 –≤ –±—Ä–∞—É–∑–µ—Ä–µ
2. –°–æ–∑–¥–∞–π—Ç–µ –∞–∫–∫–∞—É–Ω—Ç—ã Instagram –≤ —Å–∏—Å—Ç–µ–º–µ
3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø—Ä–æ—Ñ–∏–ª–∏ Dolphin Anty
4. –ó–∞–≥—Ä—É–∑–∏—Ç–µ –≤–∏–¥–µ–æ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è

üõ†Ô∏è  –£–ü–†–ê–í–õ–ï–ù–ò–ï –°–ò–°–¢–ï–ú–û–ô:

‚ñ∂Ô∏è  –ó–∞–ø—É—Å–∫:     start.bat
‚èπÔ∏è  –û—Å—Ç–∞–Ω–æ–≤–∫–∞:  stop.bat
üìú –õ–æ–≥–∏:       logs.bat

üîß –ü–û–õ–ï–ó–ù–´–ï –ö–û–ú–ê–ù–î–´:

docker-compose -f $composeFile ps          # –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
docker-compose -f $composeFile logs -f     # –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤
docker-compose -f $composeFile restart     # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫

üìû –ü–û–î–î–ï–†–ñ–ö–ê:

–ü—Ä–∏ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏–∏ –ø—Ä–æ–±–ª–µ–º –ø—Ä–æ–≤–µ—Ä—å—Ç–µ:
1. –õ–æ–≥–∏ —Å–∏—Å—Ç–µ–º—ã (logs.bat)
2. –î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å Dolphin Anty API (http://localhost:3001)
3. –°—Ç–∞—Ç—É—Å Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤

"@ -ForegroundColor $Green

# –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ—Ç–∫—Ä—ã—Ç—å –±—Ä–∞—É–∑–µ—Ä
$openBrowser = Read-Host "–û—Ç–∫—Ä—ã—Ç—å –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –≤ –±—Ä–∞—É–∑–µ—Ä–µ? (Y/n)"
if ($openBrowser -ne "n" -and $openBrowser -ne "N") {
    Start-Process "http://localhost:8000"
}

Write-Status "–†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!" 