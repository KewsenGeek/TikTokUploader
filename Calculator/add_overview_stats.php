<?php
/**
 * –°–∫—Ä–∏–ø—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –æ–±–∑–æ—Ä–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥–ª—è –≤—Å–µ—Ö —Å—Ç—Ä–∞–Ω
 * –î–æ–±–∞–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ –Ω–∞—Å–µ–ª–µ–Ω–∏–∏, –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö, —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç—è—Ö
 */

// –ü–æ–¥–∫–ª—é—á–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
require_once 'config.php';

// –ü–æ–¥–∫–ª—é—á–∞–µ–º –∫–ª–∞—Å—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
require_once 'db_operations.php';

echo "<h2>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–±–∑–æ—Ä–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥–ª—è –≤—Å–µ—Ö —Å—Ç—Ä–∞–Ω</h2>";

try {
    // –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
    $dbOps = new DatabaseOperations();
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    $countries = $dbOps->getCountriesList();
    if ($countries === false) {
        echo "<p style='color: red;'>–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö</p>";
        exit;
    }
    
    echo "<p style='color: green;'>‚úì –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ. –ù–∞–π–¥–µ–Ω–æ —Å—Ç—Ä–∞–Ω –≤ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–µ: " . count($countries) . "</p>";
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ—Ñ–ª–µ–∫—Å–∏—é –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –ø—Ä–∏–≤–∞—Ç–Ω–æ–º—É —Å–≤–æ–π—Å—Ç–≤—É pdo
    $reflection = new ReflectionClass($dbOps);
    $pdoProperty = $reflection->getProperty('pdo');
    $pdoProperty->setAccessible(true);
    $pdo = $pdoProperty->getValue($dbOps);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–±–∑–æ—Ä–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    $stmt = $pdo->query("SELECT COUNT(DISTINCT country_code) as count FROM country_overview_stats");
    $overviewStatsCount = $stmt->fetch(PDO::FETCH_ASSOC)['count'];
    echo "<p><strong>–°—Ç—Ä–∞–Ω —Å –æ–±–∑–æ—Ä–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π –¥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {$overviewStatsCount}</strong></p>";
    
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Å—Ç—Ä–∞–Ω—ã –∏–∑ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞
    $stmt = $pdo->query("SELECT country_code, country_name, tier FROM country_tariffs WHERE is_active = 1");
    $calculatorCountries = $stmt->fetchAll(PDO::FETCH_ASSOC);
    
    echo "<h3>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–±–∑–æ—Ä–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏...</h3>";
    
    $addedStats = 0;
    
    foreach ($calculatorCountries as $country) {
        $countryCode = $country['country_code'];
        $countryName = $country['country_name'];
        $tier = $country['tier'];
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –æ–±–∑–æ—Ä–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–ª—è —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω—ã
        $stmt = $pdo->prepare("SELECT COUNT(*) as count FROM country_overview_stats WHERE country_code = ?");
        $stmt->execute([$countryCode]);
        $hasOverview = $stmt->fetch(PDO::FETCH_ASSOC)['count'] > 0;
        
        if (!$hasOverview) {
            echo "<p>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–±–∑–æ—Ä–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥–ª—è {$countryName} ({$countryCode}) - Tier {$tier}</p>";
            
            $overviewStats = generateOverviewStats($countryCode, $countryName, $tier);
            
            try {
                $stmt = $pdo->prepare("INSERT INTO country_overview_stats (country_code, country_name, tier, year, total_population, internet_users, social_media_users, instagram_users, tiktok_users, youtube_users, avg_daily_screen_time, content_consumption_trend, market_maturity, data_source) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
                $stmt->execute([
                    $overviewStats['country_code'], $overviewStats['country_name'], $overviewStats['tier'], $overviewStats['year'],
                    $overviewStats['total_population'], $overviewStats['internet_users'], $overviewStats['social_media_users'],
                    $overviewStats['instagram_users'], $overviewStats['tiktok_users'], $overviewStats['youtube_users'],
                    $overviewStats['avg_daily_screen_time'], $overviewStats['content_consumption_trend'], $overviewStats['market_maturity'], $overviewStats['data_source']
                ]);
                
                $addedStats++;
            } catch (Exception $e) {
                echo "<p style='color: red;'>‚úó –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –æ–±–∑–æ—Ä–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥–ª—è {$countryName}: " . $e->getMessage() . "</p>";
            }
        }
    }
    
    echo "<p style='color: green;'>‚úì –î–æ–±–∞–≤–ª–µ–Ω–∞ –æ–±–∑–æ—Ä–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–ª—è {$addedStats} —Å—Ç—Ä–∞–Ω</p>";
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    echo "<h3>–†–µ–∑—É–ª—å—Ç–∞—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ–±–∑–æ—Ä–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:</h3>";
    $stmt = $pdo->query("SELECT COUNT(DISTINCT country_code) as count FROM country_overview_stats");
    $overviewStatsCountAfter = $stmt->fetch(PDO::FETCH_ASSOC)['count'];
    echo "<p><strong>–°—Ç—Ä–∞–Ω —Å –æ–±–∑–æ—Ä–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {$overviewStatsCountAfter}</strong></p>";
    
    if ($overviewStatsCountAfter > $overviewStatsCount) {
        echo "<p style='color: green; font-size: 18px;'>üéâ –û–ë–ó–û–†–ù–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê –î–û–ë–ê–í–õ–ï–ù–ê! –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–∞–Ω —Å –æ–±–∑–æ—Ä–æ–º —É–≤–µ–ª–∏—á–∏–ª–æ—Å—å!</p>";
    } else {
        echo "<p style='color: orange; font-size: 18px;'>‚ö† –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–∞–Ω —Å –æ–±–∑–æ—Ä–æ–º –Ω–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å</p>";
    }
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã –¥–æ–±–∞–≤–ª–µ–Ω–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    echo "<h3>–ü—Ä–∏–º–µ—Ä—ã –¥–æ–±–∞–≤–ª–µ–Ω–Ω–æ–π –æ–±–∑–æ—Ä–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:</h3>";
    $stmt = $pdo->query("SELECT country_code, country_name, tier, total_population, internet_users, social_media_users, avg_daily_screen_time FROM country_overview_stats ORDER BY country_name LIMIT 10");
    $newOverviewStats = $stmt->fetchAll(PDO::FETCH_ASSOC);
    
    echo "<ul>";
    foreach ($newOverviewStats as $stat) {
        echo "<li>{$stat['country_name']} ({$stat['country_code']}) - Tier {$stat['tier']}: –ù–∞—Å–µ–ª–µ–Ω–∏–µ: " . number_format($stat['total_population']) . ", –ò–Ω—Ç–µ—Ä–Ω–µ—Ç: " . number_format($stat['internet_users']) . ", –°–æ—Ü—Å–µ—Ç–∏: " . number_format($stat['social_media_users']) . ", –í—Ä–µ–º—è —ç–∫—Ä–∞–Ω–∞: {$stat['avg_daily_screen_time']} –º–∏–Ω</li>";
    }
    echo "</ul>";
    
} catch (Exception $e) {
    echo "<p style='color: red;'>–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: " . $e->getMessage() . "</p>";
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ–±–∑–æ—Ä–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Å—Ç—Ä–∞–Ω—ã
function generateOverviewStats($countryCode, $countryName, $tier) {
    // –ë–∞–∑–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç tier
    $baseValues = [
        1 => ['population' => 15000000, 'internet' => 0.95, 'social' => 0.85, 'screen_time' => 150, 'trend' => 'stable', 'maturity' => 'mature'],
        2 => ['population' => 25000000, 'internet' => 0.85, 'social' => 0.75, 'screen_time' => 170, 'trend' => 'growing', 'maturity' => 'developing'],
        3 => ['population' => 40000000, 'internet' => 0.70, 'social' => 0.60, 'screen_time' => 200, 'trend' => 'rapid_growth', 'maturity' => 'emerging'],
        4 => ['population' => 20000000, 'internet' => 0.80, 'social' => 0.70, 'screen_time' => 180, 'trend' => 'growing', 'maturity' => 'developing']
    ];
    
    $base = $baseValues[$tier] ?? $baseValues[2];
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Å–ª—É—á–∞–π–Ω–æ—Å—Ç—å –¥–ª—è —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏—è
    $population = $base['population'] + rand(-5000000, 5000000);
    $internetUsers = round($population * $base['internet']);
    $socialUsers = round($internetUsers * $base['social']);
    
    // –ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä—É–µ–º –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Å—Ç—Ä–∞–Ω (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
    $countrySpecifics = [
        'US' => ['population' => 340000000, 'internet' => 0.92, 'social' => 0.78],
        'RU' => ['population' => 144000000, 'internet' => 0.88, 'social' => 0.72],
        'CN' => ['population' => 1400000000, 'internet' => 0.75, 'social' => 0.65],
        'IN' => ['population' => 1400000000, 'internet' => 0.65, 'social' => 0.55],
        'BR' => ['population' => 214000000, 'internet' => 0.78, 'social' => 0.68],
        'DE' => ['population' => 83000000, 'internet' => 0.93, 'social' => 0.82],
        'FR' => ['population' => 67000000, 'internet' => 0.91, 'social' => 0.80],
        'GB' => ['population' => 67000000, 'internet' => 0.94, 'social' => 0.83],
        'IT' => ['population' => 60000000, 'internet' => 0.89, 'social' => 0.78],
        'JP' => ['population' => 125000000, 'internet' => 0.93, 'social' => 0.75],
        'CA' => ['population' => 38000000, 'internet' => 0.94, 'social' => 0.82],
        'AU' => ['population' => 26000000, 'internet' => 0.93, 'social' => 0.81],
        'MX' => ['population' => 130000000, 'internet' => 0.75, 'social' => 0.65],
        'KR' => ['population' => 52000000, 'internet' => 0.96, 'social' => 0.85],
        'ES' => ['population' => 47000000, 'internet' => 0.90, 'social' => 0.79],
        'UA' => ['population' => 44000000, 'internet' => 0.78, 'social' => 0.68]
    ];
    
    if (isset($countrySpecifics[$countryCode])) {
        $specifics = $countrySpecifics[$countryCode];
        $population = $specifics['population'] + rand(-2000000, 2000000);
        $internetUsers = round($population * $specifics['internet']);
        $socialUsers = round($internetUsers * $specifics['social']);
    }
    
    return [
        'country_code' => $countryCode,
        'country_name' => $countryName,
        'tier' => $tier,
        'year' => 2025,
        'total_population' => $population,
        'internet_users' => $internetUsers,
        'social_media_users' => $socialUsers,
        'instagram_users' => round($socialUsers * 0.8),
        'tiktok_users' => round($socialUsers * 0.6),
        'youtube_users' => round($socialUsers * 0.7),
        'avg_daily_screen_time' => $base['screen_time'] + rand(-20, 20),
        'content_consumption_trend' => $base['trend'],
        'market_maturity' => $base['maturity'],
        'data_source' => 'public'
    ];
}
?>

<hr>
<p><a href="calc.php">–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä—É</a> | <a href="stats.php">–ü–µ—Ä–µ–π—Ç–∏ –∫ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ</a> | <a href="simple_update.php">–î–æ–±–∞–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω—ã</a> | <a href="add_platform_stats.php">–î–æ–±–∞–≤–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–ª–∞—Ç—Ñ–æ—Ä–º</a></p>
