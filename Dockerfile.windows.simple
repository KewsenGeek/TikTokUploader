FROM python:3.11-slim

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV DISPLAY=:99
ENV PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD=1

# Set working directory
WORKDIR /app

# Install minimal system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl \
    wget \
    xvfb \
    && rm -rf /var/lib/apt/lists/*

# Install Python dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Install Playwright (without system dependencies - will use system browser)
RUN pip install --no-cache-dir playwright==1.35.0

# Copy project
COPY . .

# Create necessary directories with proper permissions
RUN mkdir -p /app/static /app/temp /app/logs /app/media \
    && chmod -R 755 /app

# Create simple startup script with database initialization
RUN echo '#!/bin/bash\n\
# Start virtual display\n\
Xvfb :99 -screen 0 1920x1080x24 &\n\
export DISPLAY=:99\n\
sleep 2\n\
\n\
echo "🔧 Initializing database..."\n\
# Run Django migrations\n\
python manage.py makemigrations --noinput || echo "Migrations already exist"\n\
python manage.py migrate --noinput || echo "Migration failed"\n\
\n\
# Create superuser\n\
echo "👤 Creating superuser..."\n\
python manage.py shell << EOF\n\
from django.contrib.auth import get_user_model\n\
User = get_user_model()\n\
if not User.objects.filter(username="admin").exists():\n\
    User.objects.create_superuser("admin", "admin@example.com", "admin123")\n\
    print("Superuser created: admin / admin123")\n\
else:\n\
    print("Superuser already exists")\n\
EOF\n\
\n\
# Collect static files\n\
echo "📁 Collecting static files..."\n\
python manage.py collectstatic --noinput --clear || echo "Static files failed"\n\
\n\
echo "🚀 Starting application..."\n\
# Run application\n\
exec python manage.py runserver 0.0.0.0:8000\n\
' > /app/start.sh && chmod +x /app/start.sh

# Expose port
EXPOSE 8000

# Run the startup script
CMD ["/app/start.sh"] 