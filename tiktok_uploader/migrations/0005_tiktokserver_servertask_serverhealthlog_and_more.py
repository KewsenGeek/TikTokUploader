# Generated by Django 5.1.5 on 2025-10-13 16:47

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('tiktok_uploader', '0004_warmuptask_completed_at_warmuptask_started_at'),
    ]

    operations = [
        migrations.CreateModel(
            name='TikTokServer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Уникальное имя сервера (например: 'TikTok Server 1')", max_length=100, unique=True)),
                ('host', models.CharField(help_text='IP адрес или домен сервера', max_length=255)),
                ('port', models.IntegerField(default=8000, help_text='Порт FastAPI бота')),
                ('api_key', models.CharField(blank=True, help_text='API ключ для доступа к серверу (если требуется)', max_length=255, null=True)),
                ('allowed_ips', models.TextField(blank=True, default='', help_text='Список разрешенных IP адресов (через запятую)')),
                ('status', models.CharField(choices=[('ONLINE', 'Online'), ('OFFLINE', 'Offline'), ('ERROR', 'Error'), ('MAINTENANCE', 'Maintenance')], default='OFFLINE', max_length=20)),
                ('last_ping', models.DateTimeField(blank=True, help_text='Время последней успешной проверки доступности', null=True)),
                ('last_error', models.TextField(blank=True, default='', help_text='Последняя ошибка подключения')),
                ('response_time_ms', models.IntegerField(blank=True, help_text='Время отклика в миллисекундах', null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Активен ли сервер для использования')),
                ('priority', models.IntegerField(default=1, help_text='Приоритет сервера (1 - наивысший)')),
                ('max_concurrent_tasks', models.IntegerField(default=3, help_text='Максимальное количество одновременных задач на сервере')),
                ('total_accounts', models.IntegerField(default=0, help_text='Общее количество аккаунтов на сервере')),
                ('active_tasks', models.IntegerField(default=0, help_text='Текущее количество активных задач')),
                ('total_videos_uploaded', models.IntegerField(default=0, help_text='Всего загружено видео')),
                ('notes', models.TextField(blank=True, default='', help_text='Дополнительные заметки о сервере')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'TikTok Server',
                'verbose_name_plural': 'TikTok Servers',
                'ordering': ['priority', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ServerTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_type', models.CharField(choices=[('UPLOAD', 'Upload Videos'), ('WARMUP', 'Warmup Accounts'), ('PREPARE_ACCOUNTS', 'Prepare Accounts'), ('COOKIE_ROBOT', 'Cookie Robot'), ('CUSTOM', 'Custom Task')], help_text='Тип задачи', max_length=50)),
                ('name', models.CharField(help_text='Название задачи', max_length=200)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('QUEUED', 'Queued'), ('RUNNING', 'Running'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed'), ('CANCELLED', 'Cancelled')], default='PENDING', max_length=20)),
                ('progress', models.IntegerField(default=0, help_text='Прогресс выполнения (0-100)')),
                ('parameters', models.JSONField(default=dict, help_text='Параметры задачи в JSON формате')),
                ('result', models.JSONField(blank=True, help_text='Результат выполнения задачи', null=True)),
                ('error_message', models.TextField(blank=True, default='', help_text='Сообщение об ошибке')),
                ('remote_task_id', models.CharField(blank=True, help_text='ID задачи на удаленном сервере', max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('log', models.TextField(blank=True, default='', help_text='Логи выполнения задачи')),
                ('bulk_upload_task', models.ForeignKey(blank=True, help_text='Связанная задача массовой загрузки', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='server_tasks', to='tiktok_uploader.bulkuploadtask')),
                ('warmup_task', models.ForeignKey(blank=True, help_text='Связанная задача прогрева', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='server_tasks', to='tiktok_uploader.warmuptask')),
                ('server', models.ForeignKey(help_text='Сервер, на котором выполняется задача', on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='tiktok_uploader.tiktokserver')),
            ],
            options={
                'verbose_name': 'Server Task',
                'verbose_name_plural': 'Server Tasks',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ServerHealthLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_online', models.BooleanField(default=False)),
                ('response_time_ms', models.IntegerField(blank=True, null=True)),
                ('status_code', models.IntegerField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True, default='')),
                ('server_cpu_usage', models.FloatField(blank=True, null=True)),
                ('server_memory_usage', models.FloatField(blank=True, null=True)),
                ('server_disk_usage', models.FloatField(blank=True, null=True)),
                ('accounts_count', models.IntegerField(blank=True, null=True)),
                ('videos_count', models.IntegerField(blank=True, null=True)),
                ('dolphin_profiles_count', models.IntegerField(blank=True, null=True)),
                ('checked_at', models.DateTimeField(auto_now_add=True)),
                ('server', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='health_logs', to='tiktok_uploader.tiktokserver')),
            ],
            options={
                'verbose_name': 'Server Health Log',
                'verbose_name_plural': 'Server Health Logs',
                'ordering': ['-checked_at'],
            },
        ),
        migrations.CreateModel(
            name='ServerAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('FREE', 'Free'), ('ASSIGNED', 'Assigned'), ('ACTIVE', 'Active'), ('SYNCING', 'Syncing'), ('ERROR', 'Error')], default='FREE', max_length=20)),
                ('assigned_at', models.DateTimeField(blank=True, help_text='Когда аккаунт был назначен на сервер', null=True)),
                ('last_sync_at', models.DateTimeField(blank=True, help_text='Последняя синхронизация данных с сервера', null=True)),
                ('last_used_at', models.DateTimeField(blank=True, help_text='Когда аккаунт последний раз использовался на сервере', null=True)),
                ('dolphin_profile_id_on_server', models.CharField(blank=True, help_text='ID Dolphin профиля на сервере', max_length=100, null=True)),
                ('cookies_from_server', models.JSONField(blank=True, help_text='Последние cookies с сервера', null=True)),
                ('fingerprint_from_server', models.JSONField(blank=True, help_text='Fingerprint данные с сервера', null=True)),
                ('sync_errors', models.TextField(blank=True, default='', help_text='Ошибки синхронизации')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account', models.OneToOneField(help_text='TikTok аккаунт', on_delete=django.db.models.deletion.CASCADE, related_name='server_assignment', to='tiktok_uploader.tiktokaccount')),
                ('server', models.ForeignKey(blank=True, help_text='Сервер, на котором находится аккаунт', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assigned_accounts', to='tiktok_uploader.tiktokserver')),
            ],
            options={
                'verbose_name': 'Server Account Assignment',
                'verbose_name_plural': 'Server Account Assignments',
            },
        ),
    ]
